ANCH = lib.require(@lib.model.tov.rar.anchor);

EXPORT.radius =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_core.map(obj,Y),...
	@(obj,Y) ANCH.surface.map(obj,Y),...
	0.1,...
	0,...
	1 ...
);

EXPORT.potential =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_halo.map(obj,Y),...
	@(obj,Y) ANCH.center.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.density =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_halo.map(obj,Y),...
	@(obj,Y) ANCH.center.map(obj,Y),...
	0.3,...
	0,...
	1 ...
);

EXPORT.density_critical =  lib.module.ProfileClip(...
	@(obj,Y) -max(findpeaks(-obj.get('density')./obj.get('densityCritical'))),...
	@(obj,Y) max(obj.get('density')./obj.get('densityCritical')),...
	0,...
	0,...
	1 ...
);

EXPORT.pressure =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_halo.map(obj,Y),...
	@(obj,Y) ANCH.center.map(obj,Y),...
	0.3,...
	0,...
	1 ...
);

% EXPORT.phasespace =  lib.module.ProfileClip(...
% 	@(obj,Y) interp1(obj.radius,obj.phasespace,fhalo(obj)),...
% 	@(obj,Y) mean(obj.phasespace(1:10)),...
% 	0,...
% 	0,...
% 	1 ...
% );

EXPORT.velocity =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_plateau.map(obj,Y),...
	@(obj,Y) ANCH.velocity_core.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.velocityRMS =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_halo.map(obj,Y),...
	@(obj,Y) ANCH.center.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.mass =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_core.map(obj,Y),...
	@(obj,Y) ANCH.surface.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.massDiff =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.mass_plateau.map(obj,Y),...
	@(obj,Y) ANCH.mass_core.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.potential =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.center.map(obj,Y),...
	@(obj,Y) ANCH.surface.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.potentialDiff =  lib.module.ProfileClip(...
	@(obj,Y) -max(findpeaks(-Y)),...
	@(obj,Y) max(findpeaks(Y)),...
	0,...
	0,...
	1 ...
);

EXPORT.degeneracy =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.surface.map(obj,Y),...
	@(obj,Y) ANCH.center.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.degeneracyDiff =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.degeneracy_plateau.map(obj,Y),...
	@(obj,Y) ANCH.degeneracy_core.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.cutoff =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.velocity_halo.map(obj,Y),...
	@(obj,Y) ANCH.center.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.temperature =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.surface.map(obj,Y),...
	@(obj,Y) ANCH.center.map(obj,Y),...
	0,...
	0,...
	1 ...
);

EXPORT.temperatureDiff =  lib.module.ProfileClip(...
	@(obj,Y) max(findpeaks(Y)),...
	@(obj,Y) -max(findpeaks(-Y)),...
	0,...
	0,...
	1 ...
);

EXPORT.schwarzschild =  lib.module.ProfileClip(...
	@(obj,Y) ANCH.schwarzschild_core.map(obj,Y),...
	@(obj,Y) ANCH.schwarzschild_plateau.map(obj,Y),...
	0,...
	0,...
	1 ...
);