function varargout = findSolution(varargin)
searchCfg = lib.require(@configs.solutionSearchConfig);

Q = module.struct(...
	'nlinfit',			{},...
	'gosect',			{},...
	'ResponseList',		searchCfg.ResponseList,...
	varargin{:}...
);

% set nlinfit options (for autofind)
opts				= statset('nlinfit');
opts.FunValCheck	= 'off';
opts.MaxIter		= 50;
opts.TolX			= 1E-12;

fSolution = {};

fSolution{end+1} = @(vm,list) script.nlinfit.theta0(...
	'model',	vm,...
	'list',		list,...
	'nlinfit',	{'options', opts, Q.nlinfit{:}} ...
);

fSolution{end+1} = @(vm,list) script.gosect.theta0(...
	'model',	vm,...
	'list',		list,...
	'dtheta0',	15,...
	'gosect',	Q.gosect ...
);

[varargout{1:nargout}] = module.find(...
	'query',		Q.query,...
	'ResponseList',	Q.ResponseList,...
	'model',		Q.model,...
	'fSolution',	fSolution ...
);

