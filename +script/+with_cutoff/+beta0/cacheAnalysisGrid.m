function cacheAnalysisGrid
T = load('export/TblAnalysisBeta0.mat');

MAP		= lib.require(@lib.model.tov.rar.map);
ANCH	= lib.require(@lib.model.tov.rar.anchor);


fCache = @(p) struct(...
	'beta0',	p.data.beta0,...
	'rc',		ANCH.velocity_core.map(p,MAP.radius),...
	'rp',		ANCH.velocity_plateau.map(p,MAP.radius),...
	'rh',		ANCH.velocity_halo.map(p,MAP.radius),...
	'rs',		ANCH.surface.map(p,MAP.radius),...
	'vc',		ANCH.velocity_core.map(p,MAP.velocity),...
	'vp',		ANCH.velocity_plateau.map(p,MAP.velocity),...
	'vh',		ANCH.velocity_halo.map(p,MAP.velocity),...
	'vs',		ANCH.surface.map(p,MAP.velocity),...
	'Mc',		ANCH.velocity_core.map(p,MAP.mass),...
	'Mp',		ANCH.velocity_plateau.map(p,MAP.mass),...
	'Mh',		ANCH.velocity_halo.map(p,MAP.mass),...
	'Ms',		ANCH.surface.map(p,MAP.mass),...
	'THETA0',	ANCH.center.map(p,MAP.degeneracy),...
	'THETAc',	ANCH.velocity_core.map(p,MAP.degeneracy),...
	'THETAp',	ANCH.velocity_plateau.map(p,MAP.degeneracy),...
	'THETAh',	ANCH.velocity_halo.map(p,MAP.degeneracy),...
	'THETAs',	ANCH.surface.map(p,MAP.degeneracy) ...
);

% cache data
TBL.weak	= T.weak.map(fCache);
TBL.inter	= T.inter.map(fCache);
TBL.strong	= T.strong.map(fCache);

% save
lib.save('export/CacheAnalysisBeta0.mat',TBL);