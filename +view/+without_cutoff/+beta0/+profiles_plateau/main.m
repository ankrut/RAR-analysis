function main
P			= load('export/CacheWithoutCutoffBeta0Profiles.mat');
STYLE		= lib.require(@configs.style_profiles);
AXIS.plat	= lib.require(@lib.model.tov.rar.axes.plateau);
fh			= view.without_cutoff.beta0.profiles_plateau.figure();

ax.density	= fh.UserData.axes(3,:);
ax.velocity = fh.UserData.axes(2,:);
ax.mass		= fh.UserData.axes(1,:);

figure(fh);

% density
axes(ax.density(1));
title('moderate');
vline(1,1);

hg.trans = hggroup(STYLE.interGroup{:});
P.trans.forEach(@(p)lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.density,...
	'plot',	[STYLE.inter,{'Parent',hg.trans}]...
));

lib.view.plot.curve2D(...
	'data', P.low,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.density,...
	'plot',	[STYLE.cold,STYLE.coldGroup]...
);

axes(ax.density(2));
title('hot');
vline(1,1);

hg.hot = hggroup(STYLE.hotGroup{:});
P.high.forEach(@(p)lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.density,...
	'plot',	[STYLE.hot,{'Parent',hg.hot}]...
));

lib.view.plot.curve2D(...
	'data', P.low,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.density,...
	'plot',	[STYLE.cold,STYLE.coldGroup]...
);


% velocity
axes(ax.velocity(1));
vline(1,1);

hg.trans = hggroup(STYLE.interGroup{:});
P.trans.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.velocity,...
	'plot',	[STYLE.inter,{'Parent',hg.trans}]...
));

lib.view.plot.curve2D(...
	'data', P.low,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.velocity,...
	'plot',	[STYLE.cold,STYLE.coldGroup]...
);

axes(ax.velocity(2));
vline(1,1);

hg.hot = hggroup(STYLE.hotGroup{:});
P.high.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.velocity,...
	'plot',	[STYLE.hot,{'Parent',hg.hot}]...
));

lib.view.plot.curve2D(...
	'data', P.low,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.velocity,...
	'plot',	[STYLE.cold,STYLE.coldGroup]...
);

% mass
axes(ax.mass(1));
vline(1,1);

hg.trans = hggroup(STYLE.interGroup{:});
P.trans.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.mass,...
	'plot',	[STYLE.inter,{'Parent',hg.trans}]...
));

lib.view.plot.curve2D(...
	'data', P.low,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.mass,...
	'plot',	[STYLE.cold,STYLE.coldGroup]...
);


axes(ax.mass(2));
vline(1,1);

hg.hot = hggroup(STYLE.hotGroup{:});
P.high.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.mass,...
	'plot',	[STYLE.hot,{'Parent',hg.hot}]...
));

h.cold = lib.view.plot.curve2D(...
	'data', P.low,...
	'x',	AXIS.plat.radius,...
	'y',	AXIS.plat.mass,...
	'plot',	[STYLE.cold,STYLE.coldGroup]...
);


% show legend
axes(ax.mass(1));
lib.view.plot.legend([h.cold,hg.trans,hg.hot],'location','northwest');


% save
lib.view.latex.figure(...
	'path',		'export/without-cutoff/beta0-profiles/',...
	'figure',	fh,...
	'label',	'fig:profiles:without-cutoff:central-temperature:plateau',...
	'caption',	fileread('+view/+without_cutoff/+beta0/+profiles_plateau/caption.txt') ...
);

function vline(x,y)
lib.view.plot.vline(x,'Color', [1 1 1]*0.7, 'LineStyle',':');
plot(x,y,'Marker','o', 'MarkerFaceColor', 'w', 'MarkerEdgeColor','w','MarkerSize',10);