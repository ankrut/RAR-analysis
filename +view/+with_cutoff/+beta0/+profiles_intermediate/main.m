function main
P			= load('export/CacheProfileBeta0.mat');
STYLE		= lib.require(@configs.style_profiles);
AXIS.center	= lib.require(@model.tov.rar.axes.center);
AXIS.core	= lib.require(@model.tov.rar.axes.core);
fh			= view.with_cutoff.beta0.profiles_intermediate.figure();

% makeup
for ii = 1:P.cuspy.low.length
	P.cuspy.low.data{ii}.data.density(end) = realmin;
end
for ii = 1:P.cuspy.trans.length
	P.cuspy.trans.data{ii}.data.density(end) = realmin;
end
for ii = 1:P.cuspy.deficit.length
	P.cuspy.deficit.data{ii}.data.density(end) = realmin;
end
for ii = 1:P.cuspy.high.length
	P.cuspy.high.data{ii}.data.density(end) = realmin;
end

% show figure
figure(fh);

% density
axes(fh.UserData.axes(3,1));
P.cuspy.low.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.low ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.fd ...
));
title('low temperature')

axes(fh.UserData.axes(3,2));
P.cuspy.deficit.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.deficit ...
));
P.cuspy.trans.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.trans2 ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.fd ...
));
title('transition')

axes(fh.UserData.axes(3,3));
P.cuspy.high.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.high ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.fd ...
));
title('high temperature')


% velocity
axes(fh.UserData.axes(2,1));
P.cuspy.low.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.low ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.fd ...
));

axes(fh.UserData.axes(2,2));
P.cuspy.deficit.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.deficit ...
));
P.cuspy.trans.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.trans2 ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.fd ...
));

axes(fh.UserData.axes(2,3));
P.cuspy.high.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.high ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.fd ...
));


% mass
axes(fh.UserData.axes(1,1));
P.cuspy.low.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.low ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.fd ...
));

axes(fh.UserData.axes(1,2));
P.cuspy.deficit.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.deficit ...
));
P.cuspy.trans.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.trans2 ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.fd ...
));

axes(fh.UserData.axes(1,3));
P.cuspy.high.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.high ...
));
P.cuspy.low.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.fd ...
));


% save pdf
lib.view.file.figure(fh,'export/beta0-intermediate');