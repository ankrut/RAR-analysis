function fh = figure
AXIS.plat	= lib.require(@lib.model.tov.rar.axes.plateau);

AR			= AXIS.plat.radius;
ARHO		= AXIS.plat.density;
AV			= AXIS.plat.velocity;
AM			= AXIS.plat.mass;

AX.radius = {...
	'XLim',			[1E-6,1E7],...
	'XTick',		10.^(-8:2:9),...
	'XScale',		'log' ...
};

AX.density = {...
	'YLim',			[1E-15,1E15],...
	'YTick',		10.^(-16:4:16),...
	'YScale',		'log',...
	'YMinorTick',	'off' ...
};

AX.velocity = {...
	'YLim',			[2E-1,5E1],...
	'YTick',		[0.5 1 2 5 10 20],...
	'YScale',		'log',...
	'YMinorTick',	'off' ...
};

AX.mass = {...
	'YLim',			[1E-12,1E7],...
	'YTick',		10.^(-9:4:5),...
	'YScale',		'log',...
	'YMinorTick',	'off' ...
};

for ii=1:2
	ax(3,ii) = lib.module.figure.axes('x',AR, 'y',ARHO,	'axes',[AX.radius,AX.density]);
	ax(2,ii) = lib.module.figure.axes('x',AR, 'y',AV,	'axes',[AX.radius,AX.velocity]);
	ax(1,ii) = lib.module.figure.axes('x',AR, 'y',AM,	'axes',[AX.radius,AX.mass]);
end

fh = lib.module.sapthesis.figure_grid(ax,'axHeight',@(w) w*3/4);