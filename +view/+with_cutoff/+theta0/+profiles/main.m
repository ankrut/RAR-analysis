function main
P			= load('export/CacheProfileTheta0.mat');
STYLE		= lib.require(@configs.style_profiles);
AXIS.center	= lib.require(@model.tov.rar.axes.center);
AXIS.core	= lib.require(@model.tov.rar.axes.core);
fh			= view.with_cutoff.theta0.profiles.figure();

% makeup
for ii = 1:P.cored.length
	P.cored.data{ii}.data.density(end) = realmin;
end
for ii = 1:P.cuspy.length
	P.cuspy.data{ii}.data.density(end) = realmin;
end
for ii = 1:P.deficit.length
	P.deficit.data{ii}.data.density(end) = realmin;
end
for ii = 1:P.disrupt.length
	P.disrupt.data{ii}.data.density(end) = realmin;
end

% show figure
figure(fh);

% density
axes(fh.UserData.axes(3,1));
P.cored.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.cored ...
));
P.cored.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.fd ...
));
title('cored')

axes(fh.UserData.axes(3,2));
P.cuspy.forEach(@(p)  lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.cuspy ...
));
P.cored.pick(1).forEach(@(p)  lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.fd ...
));
title('cuspy')

axes(fh.UserData.axes(3,3));
P.deficit.forEach(@(p)  lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.deficit ...
));
P.disrupt.forEach(@(p)  lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.disrupt ...
));
P.cored.pick(1).forEach(@(p)  lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.center.density,...
	'plot', STYLE.fd ...
));
title('deficit')


% velocity
axes(fh.UserData.axes(2,1));
P.cored.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.cored ...
));
P.cored.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.fd ...
));

axes(fh.UserData.axes(2,2));
P.cuspy.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.cuspy ...
));
P.cored.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.fd ...
));


axes(fh.UserData.axes(2,3));
P.deficit.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.deficit ...
));
P.disrupt.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.disrupt ...
));
P.cored.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.velocity,...
	'plot', STYLE.fd ...
));


% mass
axes(fh.UserData.axes(1,1));
P.cored.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.cored ...
));
P.cored.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.fd ...
));

axes(fh.UserData.axes(1,2));
P.cuspy.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.cuspy ...
));
P.cored.pick(1).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.fd ...
));

axes(fh.UserData.axes(1,3));
P.deficit.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.deficit ...
));
P.disrupt.forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.disrupt ...
));
P.cored.pick(6).forEach(@(p) lib.view.plot.curve2D(...
	'data', p,...
	'x',	AXIS.core.radius,...
	'y',	AXIS.core.mass,...
	'plot', STYLE.fd ...
));


% save
lib.view.latex.figure(...
	'path',		'export/with-cutoff/theta0-profile-core/',...
	'figure',	fh,...
	'label',	'fig:profile:with-cutoff:theta0:core',...
	'caption',	fileread('+view/+with_cutoff/+theta0/+profiles/caption.txt') ...
);