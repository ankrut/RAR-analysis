module.constraints
ANCH = lib.require(@model.tov.fd.anchor);
MAP  = lib.require(@model.tov.fd.map);

% load TOV defaults
EXPORT = lib.require(@model.tov.scale);

% RAW SCALE
EXPORT.raw.density			= module.ProfileScaling(1,'\rho');
EXPORT.raw.particle_density	= module.ProfileScaling(1,'\rho/m');
EXPORT.raw.pressure			= module.ProfileScaling(1,'\rho c^2');
EXPORT.raw.temperature		= module.ProfileScaling(1,'mc^2/k_B');


% SI SCALE
EXPORT.SI.radius = module.ProfileScaling(...
	@(obj) pi^(1/4)/sqrt(2)*(mp/obj.data.m)^2*lp,...
	'\mathrm{m}' ...
);

EXPORT.SI.mass = module.ProfileScaling(...
	@(obj) 1/2*pi^(1/4)/sqrt(2)*(mp/obj.data.m)^2*mp,...
	'\mathrm{kg}'...
);

EXPORT.SI.acceleration = module.ProfileScaling(...
	@(obj) c^2/EXPORT.SI.radius.map(obj),...
	'\mathrm{m/s^2}'...
);

EXPORT.SI.density = module.ProfileScaling(...
	@(obj) 2*obj.data.m^4/h^3*c^3*pi^(3/2),...
	'\mathrm{kg}/\mathrm{m}^3');

EXPORT.SI.particledensity = module.ProfileScaling(...
	@(obj) 2*obj.data.m^3/h^3*c^3*pi^(3/2),...
	'\mathrm{m}^{-3}');

EXPORT.SI.pressure = module.ProfileScaling(...
	@(obj) EXPORT.SI.density.map(obj)*c^2,...
	'N/m^2'...
);

EXPORT.SI.particle_mass = module.ProfileScaling(...
	@(obj) obj.data.m,...
	'\mathrm{kg}'...
);

EXPORT.SI.temperature_SI = module.ProfileScaling(...
	@(obj) obj.data.m*c^2/kB,...
	'K'...
);


% CGS SCALE
EXPORT.cgs.density = module.ProfileScaling(...
	@(obj) EXPORT.SI.density.map(obj)/1E-3,...
	'\mathrm{g}/\mathrm{cm}^3');



% ASTRO SCALE
EXPORT.astro.radius = module.ProfileScaling(...
	@(obj) EXPORT.SI.radius.map(obj)/parsec,...
	'\mathrm{pc}' ...
);

EXPORT.astro.radius_kpc = module.ProfileScaling(...
	@(obj) EXPORT.SI.radius.map(obj)/kpc,...
	'\mathrm{pc}' ...
);

EXPORT.astro.mass = module.ProfileScaling(...
	@(obj) EXPORT.SI.mass.map(obj)/Msun,...
	'M_\odot'...
);

EXPORT.astro.massDiff = module.ProfileScaling(...
	@(obj) EXPORT.SI.mass.map(obj)/Msun/(EXPORT.SI.radius.map(obj)/parsec),...
	'M_\odot/\mathrm{pc}'...
);

EXPORT.astro.density = module.ProfileScaling(...
	@(obj) EXPORT.SI.density.map(obj)/(Msun/parsec^3),...
	'M_\odot/\mathrm{pc}^3' ...
);

EXPORT.astro.pressure = module.ProfileScaling(...
	@(obj) EXPORT.SI.density.map(obj)/(c^2*Msun/parsec^3),...
	'c^2 M_\odot/\mathrm{pc}^3' ...
);

EXPORT.astro.particledensity = module.ProfileScaling(...
	@(obj) EXPORT.SI.particledensity.map(obj)/(1/parsec^3),...
	'\mathrm{pc}^{-3}');

EXPORT.astro.restmass = module.ProfileScaling(...
	@(obj) EXPORT.SI.density.map(obj)/Msun,...
	'M_\odot'...
);

EXPORT.astro.particle_mass = module.ProfileScaling(...
	@(obj) obj.data.m/eVcc/1E3,...
	'\mathrm{keV}/c^2'...
);

EXPORT.astro.potentialDiff = module.ProfileScaling(...
	@(obj) 1/(EXPORT.SI.radius.map(obj)/parsec),...
	'1/\mathrm{pc}'...
);

EXPORT.astro.degeneracyDiff = module.ProfileScaling(...
	@(obj) -1/(EXPORT.SI.radius.map(obj)/parsec),...
	'-1/\mathrm{pc}'...
);

EXPORT.astro.temperatureDiff = module.ProfileScaling(...
	@(obj) -obj.data.m*c^2/kB/(EXPORT.SI.radius.map(obj)/parsec),...
	'-K/\mathrm{pc}'...
);


% CENTRAL SCALE
EXPORT.central.density = module.ProfileScaling(...
	@(obj) 1/obj.data.density(1),...
	'\rho_0'...
);

EXPORT.central.pressure = module.ProfileScaling(...
	@(obj) 1/obj.data.pressure(1),...
	'\rho_0 c^2'...
);

EXPORT.central.degeneracy = module.ProfileScaling(...
	@(obj) obj.data.theta0,...
	'\theta_0'...
);


% CORE SCALE
fscale = @(obj,ykey) 1/ANCH.velocity_core.map(obj,ykey);

EXPORT.core.radius = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.radius),...
	'r_c'...
);

EXPORT.core.density = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.density),...
	'\rho_c'...
);

EXPORT.core.pressure = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.pressure),...
	'P_c'...
);

EXPORT.core.mass = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.mass),...
	'M_c'...
);

EXPORT.core.velocity = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.velocity),...
	'v_c'...
);

EXPORT.core.potential = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.potential),...
	'\nu_c'...
);

EXPORT.core.compactness = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.compactness),...
	'\varphi_c'...
);


% PLATEAU SCALE
fscale = @(obj,ykey) 1/ANCH.velocity_plateau.map(obj,ykey);

EXPORT.plateau.radius = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.radius),...
	'r_p'...
);

EXPORT.plateau.density = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.density),...
	'\rho_p'...
);

EXPORT.plateau.pressure = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.pressure),...
	'P_p'...
);

EXPORT.plateau.mass = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.mass),...
	'M_p'...
);

EXPORT.plateau.velocity = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.velocity),...
	'v_p'...
);

EXPORT.plateau.potential = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.potential),...
	'\nu_c'...
);

EXPORT.plateau.compactness = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.compactness),...
	'\varphi_p'...
);


% halo SCALE
fscale = @(obj,ykey) 1/ANCH.velocity_halo.map(obj,ykey);

EXPORT.halo.radius = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.radius),...
	'r_h'...
);

EXPORT.halo.density = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.density),...
	'\rho_h'...
);

EXPORT.halo.pressure = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.pressure),...
	'P_h'...
);

EXPORT.halo.mass = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.mass),...
	'M_h'...
);

EXPORT.halo.velocity = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.velocity),...
	'v_h'...
);

EXPORT.halo.potential = module.ProfileScaling(...
	@(obj) fscale(obj,obj.data.potential),...
	'\nu_h'...
);

EXPORT.halo.compactness = module.ProfileScaling(...
	@(obj) fscale(obj,MAP.compactness),...
	'\varphi_h'...
);